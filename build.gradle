apply plugin: 'application'
apply plugin: 'findbugs' // Static analysis
apply plugin: 'java'
apply plugin: 'jacoco' // Code coverage
apply plugin: 'mongo' // Persistence

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // Run embedded MongoDB with Gradle, only used for tests
        classpath 'com.sourcemuse.gradle.plugin:gradle-mongo-plugin:0.5.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Web server + Spring MVC
    compile "org.springframework.boot:spring-boot-starter-web:1.2.2.RELEASE"

    // MongoDB
    compile 'com.sourcemuse.gradle.plugin:gradle-mongo-plugin:0.5.0'
    compile 'org.springframework.data:spring-data-mongodb:1.6.2.RELEASE'
    compile 'javax.persistence:persistence-api:1.0'

    // General utilities
    compile 'com.google.guava:guava:18.0'

    testCompile 'junit:junit:4.11'
    testCompile 'org.springframework.boot:spring-boot-starter-test:1.2.2.RELEASE'
    testCompile 'com.jayway.restassured:rest-assured:2.4.0'
}

mainClassName = 'com.stephen_rosenthal.Main'
run {
    // Properties for the MongoDB connection; change them to point to a different database
    applicationDefaultJvmArgs = [
            '-DmongoHostName=localhost',
            '-DmongoPort=27017',
            '-DmongoDatabaseName=test'
    ]
}

// For unit tests, run a local MongoDB on a random port
mongo {
    port 'RANDOM'
}

test {
    dependsOn startManagedMongoDb
    systemProperty 'mongoHostName', 'localhost'
    systemProperty 'mongoPort', project.mongo.port
    systemProperty 'mongoDatabaseName', 'test'

    testLogging.showStandardStreams = true
    reports {
        html.enabled = true
    }
}

// Static analysis
findbugs {
    toolVersion = '3.0.0'
    sourceSets = [sourceSets.main]
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

// Coverage
jacocoTestReport {
    reports {
        html.enabled true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}